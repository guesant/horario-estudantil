# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Apelido {
  id: Int!
  materia: Materia
  professor: Professor
  texto: String!
  tipo: String!
  turma: Turma
}

type Aula {
  evento: Evento!
  id: Int!
  materia: Materia
  professores: [Professor!]!
  turmas: [Turma!]!
}

type Aula_Turma {
  aula: Aula!
  id: Int!
  turma: Turma!
}

type CategoriaTurma {
  categoriaTurmaPai: CategoriaTurma
  id: Int!
  instituicao: Instituicao!
  titulo: String
  tituloFilhos: String!
  turmas: [Turma!]!
}

input CreateInstituicaoInputType {
  apelido: String!
  nome: String!
  sigla: String!
}

input CreateTurmaInputType {
  instituicaoId: Int!
  nome: String!
}

"""Date custom scalar type"""
scalar Date

input DeleteInstituicaoInputType {
  id: Int!
}

input DeleteTurmaInputType {
  id: Int!
}

type Etapa {
  id: Int!
  periodoLetivo: PeriodoLetivo!
}

type Evento {
  aula: Aula
  dataFim: Date
  dataInicio: Date
  id: Int!
}

input FindInstituicaoByIdInputType {
  id: Int!
}

input FindInstituicaoBySiglaInputType {
  sigla: String!
}

input FindTurmaByApelidoInputType {
  apelido: String!
}

input FindTurmaByIdInputType {
  id: Int!
}

type Instituicao {
  apelido: String!
  categoriasTurma: [CategoriaTurma!]!
  id: Int!
  lastUpdate: Date
  memberships: [Instituicao_Membership!]!
  nome: String!
  periodosLetivos: [PeriodoLetivo!]!
  sigla: String!
  turmas: [Turma!]!
}

type Instituicao_Membership {
  id: Int!
  instituicao: Instituicao!
  usuario: Usuario!
}

type Materia {
  apelidoPrincipal: Apelido!
  apelidos: [Apelido!]!
  aulas: [Aula!]!
  id: Int!
}

type Mutation {
  createInstituicao(data: CreateInstituicaoInputType!): Instituicao!
  createTurma(data: CreateTurmaInputType!): Turma!
  deleteInstituicao(data: DeleteInstituicaoInputType!): Boolean!
  deleteTurma(data: DeleteTurmaInputType!): Boolean!
  updateInstituicao(data: UpdateInstituicaoInputType!, id: Int!): Instituicao!
}

type PeriodoLetivo {
  etapas: [Etapa!]!
  id: Int!
  instituicao: Instituicao!
}

type Professor {
  apelidoPrincipal: Apelido!
  apelidos: [Apelido!]!
  id: Int!
}

type Query {
  instituicaoById(options: FindInstituicaoByIdInputType!): Instituicao!
  instituicaoBySigla(options: FindInstituicaoBySiglaInputType!): Instituicao!
  searchInstituicoes(options: SearchInstituicoesInput = {}): SearchInstituicoesResult!
  turmaByApelido(data: FindTurmaByApelidoInputType!): Turma!
  turmaById(data: FindTurmaByIdInputType!): Turma!
}

input SearchInstituicoesInput {
  limit: Int
  offset: Int
  onlyMemberships: Boolean
  query: String
}

type SearchInstituicoesResult {
  estimatedTotalHits: Int!
  hits: [Instituicao!]!
  limit: Int!
  offset: Int!
}

type Turma {
  apelidoPrincipal: Apelido!
  apelidos: [Apelido!]!
  aulaTurmaRelations: [Aula_Turma!]!
  categoriaTurma: CategoriaTurma
  id: Int!
  instituicao: Instituicao!
}

input UpdateInstituicaoInputType {
  apelido: String
  nome: String
  sigla: String
}

type Usuario {
  id: Int!
  keycloakId: String!
  memberships: [Instituicao_Membership!]!
  nome: String!
}