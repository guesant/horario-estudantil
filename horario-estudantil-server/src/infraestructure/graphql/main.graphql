type Apelido {
  id: ID

  apelido: String
}

type Aula {
  id: ID

  evento: Evento!
  turmas: [Turma!]!
  materia: Materia
  professores: [Professor!]!
}

type Etapa {
  id: ID

  semanas: [Semana!]!
  periodoLetivo: PeriodoLetivo!
}

type Evento {
  id: ID

  fim: String
  inicio: String
  diaDaSemana: Int

  aula: Aula
  semana: Semana!
}

type CategoriaTurma {
  id: ID

  titulo: String
  tituloFilhos: String

  turmas: [Turma]
  instituicao: Instituicao
  categoriaTurmaPai: CategoriaTurma
}

type Materia {
  id: ID

  nome: String

  aulas: [Aula]
  apelidos: [Apelido]
}

type PeriodoLetivo {
  id: ID

  etapas: [Etapa]
  instituicao: Instituicao
}

type Professor {
  id: ID

  nome: String

  aulas: [Aula]
  apelidos: [Apelido]
}

type Semana {
  id: ID

  inicio: String
  fim: String

  etapa: Etapa
  eventos: [Evento]
}

type Turma {
  id: ID

  nome: String

  aulas: [Aula]
  apelidos: [Apelido]
  categoriaTurma: CategoriaTurma
}

type InstituicaoMembership {
  id: ID

  usuario: Usuario
  instituicao: Instituicao
}

type Instituicao {
  id: ID

  nome: String
  sigla: String
  apelido: String

  memberships: [InstituicaoMembership]!
  categoriasTurma: [CategoriaTurma]!
  periodosLetivos: [PeriodoLetivo]!
}

type Usuario {
  id: ID

  nome: String

  memberships: [InstituicaoMembership]
}

type SearchInstituicoesResult {
  hits: [Instituicao]

  limit: Int
  offset: Int
  estimatedTotalHits: Int

  # "query": "botman",
  # "processingTimeMs": 12
}

type Query {
  instituicao(sigla: String!): Instituicao

  searchInstituicoes(
    query: String
    limit: Int
    offset: Int
  ): SearchInstituicoesResult
}
